name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'Sources/**/*.swift'
      - 'README.md'
      - '.github/workflows/documentation.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Sources/**/*.swift'
      - 'README.md'
      - '.github/workflows/documentation.yml'

jobs:
  build-docs:
    name: Build Documentation
    runs-on: macos-latest
    # Note: Requires Xcode 26+ (beta) for Swift 6.2 support

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: "6.2"

    - name: Cache Swift dependencies
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/Library/Caches/org.swift.swiftpm
        key: ${{ runner.os }}-swift-docs-${{ hashFiles('Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-swift-docs-

    - name: Generate Documentation
      run: |
        # Create docs directory if it doesn't exist
        mkdir -p docs

        # Generate DocC archive if available
        if swift package --help | grep -q generate-documentation; then
          echo "Generating DocC documentation..."
          swift package generate-documentation \
            --target SwiftResponsesDSL \
            --output-path docs \
            --hosting-base-path SwiftResponsesDSL

          # List generated files
          echo "Generated documentation files:"
          find docs -type f -name "*.doccarchive" | head -5
        else
          echo "DocC generation not available, creating basic documentation structure"
          # Create basic documentation structure
          mkdir -p docs
          echo "# SwiftResponsesDSL Documentation" > docs/README.md
          echo "Documentation generated on $(date)" >> docs/README.md
        fi

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/
        retention-days: 30

  validate-links:
    name: Validate Links
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Link Checker
      uses: lycheeverse/lychee-action@v1.10.0
      with:
        # Check all markdown files
        args: --verbose --no-progress --exclude-mail **/*.md
        # Don't fail on external links that might be temporarily down
        fail: true
        failIfEmpty: false
        format: markdown
        output: link-check-report.md

    - name: Upload link check report
      uses: actions/upload-artifact@v4
      with:
        name: link-check-report
        path: link-check-report.md
        retention-days: 30
